#!/usr/bin/env bash
#
# Based on https://doc.m0n0.ch/dev/image-guide-mfsroot.html
#
set -e

RELEASE=${RELEASE:-14.0-CURRENT}
DOWNLOAD_URL=https://download.freebsd.org/snapshots/arm64/aarch64/${RELEASE}
     
if [ ! -f ./base.txz ]; then
    wget -O ./base.txz ${DOWNLOAD_URL}/base.txz
fi

# First of all, a zero-filled image file needs to be created.
# Image size should be enough to fit all the files in the root
# file system. If you add big components, you may need to
# increase this. However, don't make it much bigger than necessary,
# as the MFS will take up as much space as you specify here,
# even if the file system is not full.
dd if=/dev/zero of=mfsroot bs=1k count=65536

# Now we'll use mkfs.ext2 to create filesystem inside image file:
mkfs.ext2 -F mfsroot

# Extract the base file system into the filesystem, omitting /rescue and /usr,
# so that the image size could be small enough for the SPI flash chip:
BASE=$(pwd)/base.txz
mkdir -p base
bsdtar -xpf $BASE -C ./base --exclude='./rescue' --exclude='./usr' --exclude='./sys'
pushd base
find . -type f | e2cp -ap -d ../mfsroot:/

# /dev, /tmp and /proc must always be present
# https://forums.FreeBSD.org/threads/a-problem-with-booting-freebsd-on-zfs.69726/post-450304
e2mkdir ../mfsroot:/dev
e2mkdir ../mfsroot:/proc
e2mkdir ../mfsroot:/tmp
e2mkdir ../mfsroot:/usr

popd

#lzma -f -z -k -9 -e mfsroot
#cwd=$(pwd)
#sudo -i -u marcusmae scp $cwd/mfsroot.lzma m17:/home/marcusmae/forge/docker-tftpd/tftpboot/

